{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww25100\viewh15040\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs24 \cf0 Midi Message:
\b0 \
Byte 1 (status byte):\
1		2-4		5-8\
0		000		0000\
status		mode		channel\
\
- the high bit (called status bit) of a status byte is always 1 to signify this is a new message (ie. that data bytes will follow).\
- the mode bits specify the type of midi message being sent (ie. note on, pitch change, control change, etc.)\
\
Byte 2 and 3 (data byte):\
1		2-8\
0		0000000\
status		data\
\
- the status bit of a data byte is always 0 to signify this is a data byte.\
- the second data byte (byte 3 in a message) is optional and is only sent in some messages (ie. note on, note off, poly pressure, etc.).\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\b \cf0 Midi Modes:
\b0 \
Channel messages - specify musical data\
	Voice messages - \
		Note On \
			- data byte 1 = note number\
			- data byte 2 = velocity\
			- 127 possible values\
			- middle C = 60\
			- a velocity of 0 should be treated as a note off event\
			- 64 is the average velocity\
		Note Off\
			- data byte 1 = note number\
			- data byte 2 = velocity\
		Channel Pressure \
			- for instruments that can only detect pressure as an instrument whole and not poly pressure.\
			- data byte 1 = pressure\
			- is global (affects all currently playing notes)\
		Poly Pressure \
			- pressure on each note.\
			- data byte 1 = note number\
			- data byte 2 = pressure\
			- is global (affects all currently playing notes)\
		Program Change\
			- a change in note voice/patch\
			- data byte 1 = program number\
			- is global (affects all currently playing notes)\
		Pitch Change\
			- data byte 1 = coarse pitch position\
			- data byte 2 = fine pitch position\
			- is global (affects all currently playing notes)\
		Control Change\
			- aka Channel Mode Messages\
			- 128 different channel mode messages including voice bank selection, volume, panning, etc.\
			- data byte 1 - channel mode?\
	Mode messages -\
System messages - \
	Common messages\
		- Tune Request\
			- Correct tuning of another midi device\
		- Song Select\
			- Specify the song which will be played next\
		- Song Position Pointer\
			- The number of 16th notes that have passed since the beginning of the song.\
			- Used to keep two machines synced to the closest sixteenth note.\
			- Used with Midi Clock messages to create Midi Sync\
		- Midi Time Code (MTC)\
			- Represents song position in absolute time.\
			- Usually converted to SMPTE time code (hours, minutes, seconds and frames).\
	Real-Time messages\
		- Midi Clock\
			- Sends 24 pulses for every quarter note that passes\
			- Combined with Song Position Pointer messages gives you Midi Sync\
		- Start\
		- Stop\
		- Continue\
		- Active Sensing\
			- Sends a message every 250ms to signify the connection between midi devices is not interrupted.\
			- If the active sensing message is not received, the slaves should stop playing. \
				- This ensures that during live performances notes don't get stuck in an on position if a midi cable is pulled.\
		- System Reset\
			- Reset a midi slave to it's initial settings\
	Exclusive messages \
	Used for non-performance related data (ex. loading and backing up patch information). Messages are sent in the following order (order is important):\
		- Start of Exclusive\
			- Specifies the following message is a System Exclusive message.\
		- Manufacturer's ID Number\
		- Product ID Number\
		- Device ID Number\
		- Program Data\
			- As many data bytes as necessary can be sent in the program data.\
		- End of Exclusive\
			- Signifies the end of a System Exclusive message.}
//// Generated by CoffeeScript 1.7.1
//
//// TODO How can we expose legato as an object?
// TODO Try using browserify to put these somewhere other than the window.
//window.legato = {};

(function() {
  'use strict';
  var dispatch, routes, routesCreated, utils;

  utils = null;

  this.init = function(legatoUtils) {
    utils = legatoUtils;
		this.reinit();
  };

  this.reinit = function() {
    this.deinit();
		utils.___('init');
    return this;
  };

  routesCreated = 0;

  this.routes = routes = {};

  this.dispatch = dispatch = function(path, val) {
    var cb, id, path_, _ref, _results;
    _results = [];
    for (id in routes) {
      _ref = routes[id], path_ = _ref[0], cb = _ref[1];
      if (path.match(path_)) {
        _results.push((utils.bind(cb, {
          path: path,
          val: val
        }))(val));
      } else {

      }
    }
    return _results;
  };

  this["in"] = function(prefix, input) {
    var id, shutdown;
    id = utils.generateId();
    if (typeof prefix === 'function') {
      input = prefix;
      prefix = id;
    }
    utils.___('in+ ', prefix);
    shutdown = input(function(path, val) {
      return dispatch(prefix + path, val);
    });
    utils.store(shutdown, id);
    return id;
  };

  this.on = function(path, cb) {
    var path_;
    path_ = '^' + (path.replace(/\:([^\/]*)/g, '([^/]*)')) + '$';
    utils.___('route+ ', path, ' = ', path_);
    routesCreated += 1;
    routes[routesCreated] = [path_, cb, path];
    return routesCreated;
  };

  this.removeRoute = function(id) {
    utils.___('route- ', id, routes[id][2]);
    return delete routes[id];
  };

  this.removeInput = function(id, prefix) {
    var cb, route, routeId, _ref, _ref1;
    utils.___('in- ', id, prefix);
    _ref = this.routes;
    for (routeId in _ref) {
      _ref1 = _ref[routeId], route = _ref1[0], cb = _ref1[1];
      if (route.indexOf("^" + id) === 0) {
        this.removeRoute(routeId);
      }
      if ((prefix != null) && route.indexOf("^" + prefix) === 0) {
        this.removeRoute(routeId);
      }
    }
    return utils.remove(id);
  };

  this.deinit = function() {
    utils.callAll();
    utils.clear();
    return this.routes = {};
  };

}).call(this);
//}).call(window.legato);

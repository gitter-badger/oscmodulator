// Generated by CoffeeScript 1.7.1
window.legatoUtils = {};

(function() {
  'use strict';
  var inputsCreated, _, ___,
    __slice = [].slice;

  inputsCreated = 0;

  _ = null;

  this.init = function(lodash) {
    return _ = lodash;
  };

  this.___ = ___ = function() {
    console.log.apply(console, ['[legato]'].concat(__slice.call(arguments)));
    return arguments[0];
  };

  this.____ = function(arg) {
    return function() {
      ___.apply(null, [arg].concat(__slice.call(arguments)));
      return arguments[0];
    };
  };

  this.closet = {};

  this.generateId = function() {
    inputsCreated += 1;
    return "/" + inputsCreated;
  };

  this.store = function(callback, id) {
    id = id != null ? id : this.generateId();
    this.closet[id] = callback;
    return id;
  };

  this.remove = function(id) {
    delete this.closet[id];
    return true;
  };

  this.clear = function() {
    this.closet = {};
    return true;
  };

  this.callAll = function() {
    var cb, prop, _ref;
    _ref = this.closet;
    for (prop in _ref) {
      cb = _ref[prop];
      cb();
    }
    return true;
  };

  this.throttle = function(time, fn) {
    return _.throttle(fn, time);
  };

  this.delay = function(time, fn) {
    return _.delay(fn, time);
  };

  this.bind = function(cb, options) {
    return _.bind(cb, options);
  };

}).call(window.legatoUtils);
